# Aluno: Lucas dos Santos Bezerra -
# Aluna: Mággila Rayanne da Silva Holanda - 22354505

import tkinter as tk
import turtle

'''
1º construir Triangulo Equilatero
2º dividir cada lado em 3 partes iguais
3º desenhar o triangulo em cada meio
    medir o comprimento do terço medio para saber o novo valor do lados
4º parte rercusiva
'''


t = turtle.Turtle()  # Configuração da Turtle
t.speed(0)  # velocidade da caneta
t.pensize(2)  # Grossura da caneta


screen = turtle.Screen()
screen.setup(width=600, height=600)
screen.title("Trabalho 1 - Algoritmo e Estrutura de DadosII")


def segmento_curva(tam, nivel):  # Funçao recursiva - SEGMENTO
    # caso base
    if nivel == 1:
        t.forward(tam)  # Desenha o triangulo equilatero
    else:
        tam = tam / 3.0  # Novo tamanho do segemento
        segmento_curva(tam, nivel - 1)  # 1º terço do segmento
        t.right(60)  # Rotaciona
        segmento_curva(tam, nivel - 1)  # 2º terço do segmento
        t.left(120)  # Rotaciona
        segmento_curva(tam, nivel - 1)  # 3º terço do segmento
        t.right(60)  # Rotaciona
        segmento_curva(tam, nivel - 1)  # 4º terço do segmento


def triangulo_equilatero(tam, nivel):  # Funçao que desenha o Triangulo
    for _ in range(3):
        segmento_curva(tam, nivel)
        t.left(120)


def quant_niveis():
    t.reset()  # Limpa a tela e coloca a caneta na posiçao inicial para o novo desenho

    comprimento = 400  # Tamanho

    # Posiçao da Turtle
    t.penup()  # retira caneta
    t.goto(-comprimento/2, -comprimento/3)  # Posiçao atual
    t.pendown()  # Coloca caneta

    # Define a cor da caneta para azul
    t.pencolor("blue")

    valor = int(entrada.get())
    for _ in range(1):
        triangulo_equilatero(comprimento, valor)
# get > obter valor atual do campo de entrada como uma string.
# entrada > objeto do tipo Entry


# Configuração Tkinter
janela = tk.Tk()
janela.title("FLOCO DE NEVE")
janela.geometry("300x100+20+20")

lblMsg = tk.Label(
    janela, text="Informe em qual nível será desenhado o floco de neve")
lblMsg.pack()
entrada = tk.Entry(janela)  # Entrada de texto
entrada.pack()

# Botao
btn = tk.Button(janela, text="ENVIAR", command=quant_niveis)
btn.pack()

janela.mainloop()


''' 
REFERENCIA : https://acervolima.com/curva-de-koch-ou-floco-de-neve-de-koch/

'''
